plugin.name=Just Kitting
just.kitting.family.name=Just Kitting

# Generate getInstance() actions
action.generate.getinstance.level.list.title=Service Level
action.generate.getinstance.application.level=Application
action.generate.getinstance.project.level=Project
action.generate.getinstance.no.parent.class.title=No parent class
action.generate.getinstance.no.parent.class.message=No parent class to generate the <code>getInstance()</code> function in.

# PersistentStateComponent intentions
intention.category=Just Kitting
intention.convert.to.persistent.state.component.text=Convert to PersistentStateComponent...
intention.convert.to.persistent.state.component.family=Convert class to PersistentStateComponent
intention.persistent.state.use.standalone.state.object=Use standalone state object
intention.persistent.state.use.self.as.state=Use self as state

# Light services inlay hints
inlay.hints.light.services.display.mode.label=Display mode:
inlay.hints.light.services.view.all.light.services=View all light services...
inlay.hints.light.services.list.display.mode.group.title=-- {0} light services --
inlay.hints.light.services.view.all.popup.title=Light Services in This Project

inlay.hints.light.services.settings.type.title=Plugin light services
inlay.hints.light.services.settings.show.hints.option=Show hints
inlay.hints.light.services.settings.list.display.mode.preview.text=-- Project light services --,SomeProjectService,-- Application light services --,AwesomeApplicationService,View all light services...
inlay.hints.light.services.settings.display.mode.disabled=Disabled
inlay.hints.light.services.settings.display.mode.list.of.services=Show the list of light services
inlay.hints.light.services.settings.display.mode.view.all.only=Show 'View all light services' hint only
inlay.hints.light.services.settings.value.must.be.between.x.and.y=The value must be between {0} and {1}.
inlay.hints.light.services.settings.value.must.be.a.number=Please enter a number.
inlay.hints.light.services.settings.max.no.of.services.label=Max number of services to display:

# Service level
service.level.display.name.project=Project
service.level.display.name.app=Application
service.level.display.name.project.and.app=Project and application
service.level.display.name.not.sure=Unclassified

# CallMatcher
inspection.call.matcher.no.instance.method.with.name=No instance method exists with this name in the referenced class or any of its super classes.
inspection.call.matcher.no.exact.instance.method.with.name=No instance method exists with this name in the referenced class.
inspection.call.matcher.no.static.method.with.name=No static method exists with this name in the referenced class or any of its super classes.
intention.call.matcher.combine.to.any.of.name=Combine matchers to CallMatcher.anyOf()
intention.call.matcher.family.name=Combine CallMatchers to CallMatcher.anyOf()
intention.call.matcher.combine.to.any.of.select.class=Select Target Class
intention.call.matcher.generate.from.signature=Generate CallMatcher
intention.call.matcher.select.instance.call.type=Select Instance Call Type
intention.call.matcher.could.not.resolve.method.title=Generate CallMatcher
intention.call.matcher.could.not.resolve.method.message=Can't generate CallMatcher. The referenced method could not be resolved. 

# UI
intention.ui.generate.multi.checkbox.panel=MultipleCheckboxOptionsPanel...
intention.ui.generate.single.checkbox.panel=SingleCheckboxOptionsPanel
intention.ui.generate.single.integer.field.options.panel=SingleIntegerFieldOptionsPanel
intention.ui.generate.convention.options.panel=ConventionOptionsPanel
intention.ui.select.panel.type.title=Select Panel Type
intention.ui.select.checkbox.count.title=Number of Checkboxes

# Caching
inspection.cached.value.provider.result.without.dependency=Result object is created without dependency. The Result class implementation says:\
  "No dependencies provided which causes CachedValue to be never recalculated again. If this is intentional, please use ModificationTracker.NEVER_CHANGED"
inspection.cached.value.provider.add.dependency.quick.fix=Add {0} as dependency
inspection.cached.value.provider.add.never.changed.quick.fix.family=CachedValueProvider fixes
inspection.cached.value.provider.replace.with.dependency.quick.fix=Replace empty collection with {0}

# Expression optimization
inspection.empty.array.creation=You can use {0}.EMPTY_ARRAY instead.
inspection.replace.with.empty.array.constant=Replace with {0}.EMPTY_ARRAY
inspection.optimize.expressions.family=Expression can be optimized
inspection.replace.with.is.empty=Replace with {0}isEmpty()
inspection.use.expression.list.is.empty=You can call {0}isEmpty() instead.

# Content diffing with IntelliJ Platform Plugin Template
diff.editor.title=Compare with Plugin Template
diff.version.remote=Platform Plugin Template
diff.version.local=Local
diff.version.remote.could.not.get.content=Could not get content from remote.

# Code folding
code.folding.plugin.descriptor.tags=Plugin descriptor file tags
