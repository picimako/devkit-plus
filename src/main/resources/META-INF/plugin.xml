<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin require-restart="false">
    <id>picimako.justkitting</id>
    <name>Just Kitting</name>
    <vendor url="https://github.com/picimako/just-kitting">Tam√°s Balog</vendor>
    <resource-bundle>messages.JustKittingBundle</resource-bundle>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>org.jetbrains.kotlin</depends>
    <depends>DevKit</depends>
    <depends optional="true" config-file="properties-features.xml">com.intellij.properties</depends>

    <!-- See https://kotlin.github.io/analysis-api/declaring-k2-compatibility.html -->
    <extensions defaultExtensionNs="org.jetbrains.kotlin">
        <supportsKotlinPluginMode supportsK2="true" />
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <!-- CallMatcher -->
        <localInspection implementationClass="com.picimako.justkitting.inspection.CallMatcherInspection" id="just.kitting.call.matcher"
                         language="JAVA" displayName="CallMatcher inspections" groupName="Just Kitting" enabledByDefault="true" level="ERROR"/>

        <!-- Caching -->
        <localInspection implementationClass="com.picimako.justkitting.inspection.CachedValuesInspection" id="just.kitting.caching"
                         language="JAVA" displayName="Caching inspections" groupName="Just Kitting" enabledByDefault="true" level="ERROR"/>

        <!-- Code optimization -->
        <localInspection implementationClass="com.picimako.justkitting.inspection.OptimizeExpressionsInspection" id="just.kitting.code.optimization"
                         language="JAVA" displayName="Code optimization checks" groupName="Just Kitting" enabledByDefault="true" level="WARNING"/>

        <intentionAction>
            <language>JAVA</language>
            <categoryKey>intention.category</categoryKey>
            <className>com.picimako.justkitting.intention.state.MakeJavaClassPersistentStateComponentIntention</className>
        </intentionAction>
        <intentionAction>
            <language>kotlin</language>
            <categoryKey>intention.category</categoryKey>
            <className>com.picimako.justkitting.intention.state.MakeKotlinClassPersistentStateComponentIntention</className>
        </intentionAction>

        <intentionAction>
            <language>JAVA</language>
            <categoryKey>intention.category</categoryKey>
            <className>com.picimako.justkitting.intention.callmatcher.CallMatchersConversionToAnyOfIntention</className>
        </intentionAction>
        <intentionAction>
            <language>JAVA</language>
            <categoryKey>intention.category</categoryKey>
            <className>com.picimako.justkitting.intention.callmatcher.GenerateCallMatcherFromSignatureIntention
            </className>
        </intentionAction>

        <codeInsight.inlayProvider language="XML" implementationClass="com.picimako.justkitting.inlayhint.LightServicesInlayHintsProvider"/>
        <psi.referenceContributor language="JAVA" implementation="com.picimako.justkitting.reference.CallMatcherReferenceContributor"/>

        <defaultLiveTemplates file="/liveTemplates/JustKitting.xml"/>

        <lang.foldingBuilder language="XML"
                             implementationClass="com.picimako.justkitting.codefolding.plugindescriptor.PluginDescriptorTagsFoldingBuilder"/>
        <codeFoldingOptionsProvider instance="com.picimako.justkitting.codefolding.JustKittingCodeFoldingOptionsProvider"/>
        <applicationService serviceInterface="com.picimako.justkitting.codefolding.JustKittingCodeFoldingSettings"
                            serviceImplementation="com.picimako.justkitting.codefolding.JustKittingCodeFoldingSettingsImpl"/>

        <codeInsight.lineMarkerProvider language="XML" implementationClass="com.picimako.justkitting.linemarker.PluginDescriptorIconLineMarkerProvider"/>
    </extensions>

    <actions>
        <action id="just.kitting.generate.service.static.getter"
                class="com.picimako.justkitting.action.getinstance.GenerateStaticGetInstanceAction"
                text="Service getInstance()" description="${project.description}">
            <add-to-group group-id="GenerateGroup" anchor="after" relative-to-action="JavaGenerateGroup2"/>
        </action>

        <action id="just.kitting.compare.config.file.with.plugin.template"
                class="com.picimako.justkitting.action.diff.CompareConfigFileWithPluginTemplateAction"
                text="Compare with Platform Plugin Template Version">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="after" relative-to-action="CompareFileWithEditor"/>
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="CompareClipboardWithSelection"/>
        </action>
    </actions>
</idea-plugin>
